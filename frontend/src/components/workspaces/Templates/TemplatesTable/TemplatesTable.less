// WE HAVE TO FIX THIS HARD CODED HEIGHT
// document.documentElement.style.setProperty('--box-ext-height', `${value}px`);

.cl-templates-table {
  /* let the component / Box control height via flex; allow vertical scrolling only */
  flex: 1 1 auto;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;
}

/* Make Ant's table wrapper/container participate in the flex chain and provide the scroll surface */
.cl-templates-table .ant-table-wrapper,
.cl-templates-table .ant-table-container {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  min-height: 0;
  overflow: auto;
}

tr.ant-table-expanded-row > td {
  background-color: #141414 !important;
}

body.light {
  tr.ant-table-expanded-row > td {
    background-color: #ffffff !important;
  }
}

.rowInstance-bg-color .ant-table-container {
  overflow-x: hidden;
}
.rowInstance-bg-color .ant-table-container table {
  width: 100% !important;
  table-layout: fixed;
}
.rowInstance-bg-color .ant-table-cell {
  word-break: break-word;
}

/* ensure root / app has a height so inner flex can be constrained */
html, body, #root {
  height: 100%;
}

/* make card and table containers participate in the flex chain and allow children to shrink */
.cl-card-box,
.ant-card-body,
.cl-table-instance,
.cl-templates-table,
.ant-table-wrapper,
.ant-table-container,
.ant-spin-container {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  min-height: 0; /* critical so children can overflow/scroll */
}

/* keep the table scrollable */
.cl-templates-table {
  overflow-y: auto;
  overflow-x: hidden;
}